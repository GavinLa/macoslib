#tag ModuleProtected Module Carbon	#tag Method, Flags = &h0		Sub SpotlightSearch(searchTerm as String)		  //opens a Spotlight search window and does the search using searchTerm		  //if searchTerm = "", a search window is opened		  		  #if targetMacOS		    soft declare function HISearchWindowShow lib "Carbon.framework" (inSearchString as CFStringRef, inOptions as UInt32) as Integer		    		    const kNilOptions = 0		    dim OSError as Integer = HISearchWindowShow(searchTerm, kNilOptions)		  #endif		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub ShowAboutBox(name as String = "", Version as String = "", Copyright as String = "", Description as String = "")		  dim d as new CFMutableDictionary		  if name <> "" then		    const kHIAboutBoxNameKey = "HIAboutBoxName"		    dim key as CFString = kHIAboutBoxNameKey		    dim value as CFString = name		    d.Value(key) = value		  end if		  if Version <> "" then		    const kHIAboutBoxVersionKey = "HIAboutBoxVersion"		    dim key as CFString = kHIAboutBoxVersionKey		    dim value as CFString = Version		    d.Value(key) = value		  end if		  if Copyright <> "" then		    const kHIAboutBoxCopyrightKey = "HIAboutBoxCopyright"		    dim key as CFString = kHIAboutBoxCopyrightKey		    dim value as CFString = Copyright		    d.Value(key) = value		  end if		  if Version <> "" then		    const kHIAboutBoxDescriptionKey = "HIAboutBoxDescription"		    dim key as CFString = kHIAboutBoxDescriptionKey		    dim value as CFString = Description		    d.Value(key) = value		  end if		  		  #if targetMacOS		    soft declare function HIAboutBox lib CarbonFramework (inOptions as Ptr) as Integer		    		    dim OSError as Integer = HIAboutBox(d)		  #endif		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub SystemUIMode(mode as UIMode, options as UIOptions)		  #if targetMacOS		    soft declare function SetSystemUIMode lib CarbonFramework (inMode as UIMode, inOptions as UIOptions) as Integer		    		    dim OSError as Integer = SetSystemUIMode(mode, options)		  #endif		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function SystemUIMode() As UIMode		  #if targetMacOS		    soft declare sub GetSystemUIMode lib CarbonFramework (ByRef mode as UIMode, outOptions as Ptr)		    		    dim mode as UIMode		    GetSystemUIMode mode, nil		    return mode		  #endif		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function SystemUIOptions() As UIOptions		  #if targetMacOS		    soft declare sub GetSystemUIMode lib CarbonFramework (mode as Ptr, ByRef outOptions as UIOptions)		    		    dim options as UIOptions		    GetSystemUIMode nil, options		    return options		  #endif		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function IsLeopard() As Boolean		  dim sysVersion as Integer		  return System.Gestalt("sysv", sysVersion) and sysVersion >= &h1050		End Function	#tag EndMethod	#tag Constant, Name = CarbonFramework, Type = String, Dynamic = False, Default = \"Carbon.framework", Scope = Public	#tag EndConstant	#tag Constant, Name = CarbonLib, Type = String, Dynamic = False, Default = \"CarbonLib", Scope = Public	#tag EndConstant	#tag Constant, Name = CarbonBundleID, Type = String, Dynamic = False, Default = \"com.apple.Carbon", Scope = Public	#tag EndConstant	#tag Constant, Name = noErr, Type = Double, Dynamic = False, Default = \"0", Scope = Public	#tag EndConstant	#tag Constant, Name = kNilOptions, Type = Double, Dynamic = False, Default = \"0", Scope = Public	#tag EndConstant	#tag Constant, Name = kInvalidID, Type = Double, Dynamic = False, Default = \"0", Scope = Public	#tag EndConstant	#tag Constant, Name = kVariableLengthArray, Type = Double, Dynamic = False, Default = \"1", Scope = Public	#tag EndConstant	#tag Constant, Name = kUnknownType, Type = String, Dynamic = False, Default = \"\?\?\?\?", Scope = Public	#tag EndConstant	#tag Constant, Name = activeFlagBit, Type = Double, Dynamic = False, Default = \"0", Scope = Public	#tag EndConstant	#tag Constant, Name = btnStateBit, Type = Double, Dynamic = False, Default = \"7", Scope = Public	#tag EndConstant	#tag Constant, Name = cmdKeyBit, Type = Double, Dynamic = False, Default = \"8", Scope = Public	#tag EndConstant	#tag Constant, Name = shiftKeyBit, Type = Double, Dynamic = False, Default = \"9", Scope = Public	#tag EndConstant	#tag Constant, Name = alphaLockBit, Type = Double, Dynamic = False, Default = \"10", Scope = Public	#tag EndConstant	#tag Constant, Name = optionKeyBit, Type = Double, Dynamic = False, Default = \"11", Scope = Public	#tag EndConstant	#tag Constant, Name = controlKeyBit, Type = Double, Dynamic = False, Default = \"12", Scope = Public	#tag EndConstant	#tag Constant, Name = rightShiftKeyBit, Type = Double, Dynamic = False, Default = \"13", Scope = Public	#tag EndConstant	#tag Constant, Name = rightOptionKeyBit, Type = Double, Dynamic = False, Default = \"14", Scope = Public	#tag EndConstant	#tag Constant, Name = rightControlKeyBit, Type = Double, Dynamic = False, Default = \"15", Scope = Public	#tag EndConstant	#tag Structure, Name = UTCDateTime, Flags = &h0		highSeconds as UInt16		  lowSeconds as UInt32		fraction as UInt16	#tag EndStructure	#tag Structure, Name = MacRect, Flags = &h0		top as Int16		  left as Int16		  bottom as Int16		right as Int16	#tag EndStructure	#tag Structure, Name = MacPoint, Flags = &h0		v as Int16		h as Int16	#tag EndStructure	#tag Structure, Name = Str255, Flags = &h0		length as Uint8		data as String*255	#tag EndStructure	#tag Structure, Name = LongDateRec, Flags = &h0		era as Int16		  year as Int16		  month as Int16		  day as Int16		  hour as Int16		  minute as Int16		  second as Int16		  dayOfWeek as Int16		  dayOfYear as Int16		  weekOfYear as Int16		  pm as Int16		  res1 as Int16		  res2 as Int16		res3 as Int16	#tag EndStructure	#tag Enum, Name = UIMode, Flags = &h0		Normal = 0		  ContentSuppressed = 1		  ContentHidden = 2		  AllSuppressed = 4		AllHidden = 3	#tag EndEnum	#tag Enum, Name = UIOptions, Flags = &h0		AutoShowMenuBar = 1		  DisableAppleMenu = 4		  DisableProcessSwitch = 8		  DisableForceQuit = 16		  DisableSessionTerminate = 32		DisableHide = 64	#tag EndEnum	#tag ViewBehavior		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Module#tag EndModule