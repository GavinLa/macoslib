#tag ClassClass CFPreferences	#tag Method, Flags = &h0		 Shared Function Sync() As Boolean		  #if targetMacOS		    soft declare function CFPreferencesAppSynchronize lib CarbonFramework (applicationID as Ptr) as Boolean		    		    dim appID as Ptr = CurrentApplication		    if appID <> nil then		      return CFPreferencesAppSynchronize(appID)		    else		      return false		    end if		  #endif		End Function	#tag EndMethod	#tag Method, Flags = &h21		Private Shared Function CurrentApplication() As Ptr		  dim carbon as CFBundle = CFBundle.CarbonFramework		  if carbon is nil then		    return nil		  end if		  		  const kCFPreferencesCurrentApplication = "kCFPreferencesCurrentApplication"		  dim p as Ptr = carbon.DataPointer(kCFPreferencesCurrentApplication)		  if p = nil then		    return nil		  else		    return p.Ptr(0)		  end if		End Function	#tag EndMethod	#tag Method, Flags = &h0		 Shared Function Value(key as String) As CFPropertyList		  #if targetMacOS		    soft declare function CFPreferencesCopyAppValue lib CarbonFramework (key as CFStringRef, applicationID as Ptr) as Ptr		    		    dim appID as Ptr = CurrentApplication		    if appID = nil then		      return nil		    end if		    dim p as Ptr = CFPreferencesCopyAppValue(key, appID)		    if p = nil then		      return nil		    end if		    dim theValue as CFType = CFType.NewObject(p)		    if theValue isA CFPropertyList then		      return CFPropertyList(theValue)		    else		      return nil //because Apple docs are in error		    end if		  #endif		End Function	#tag EndMethod	#tag Method, Flags = &h0		 Shared Sub Value(key as String, assigns theValue as CFPropertyList)		  if theValue is nil then		    return		  end if		  		  #if targetMacOS		    soft declare sub CFPreferencesSetAppValue lib CarbonFramework (key as CFStringRef, value as Ptr, applicationID as Ptr)		    		    dim appID as Ptr = CurrentApplication		    if appID = nil then		      return		    end if		    		    CFPreferencesSetAppValue key, theValue, appID		  #endif		End Sub	#tag EndMethod	#tag Method, Flags = &h0		 Shared Function Keys() As String()		  #if targetMacOS		    dim theList() as String		    		    dim appID as Ptr = CurrentApplication		    if appID = nil then		      return theList		    end if		    dim user as Ptr = CurrentUser		    if user = nil then		      return theList		    end if		    dim host as Ptr = AnyHost		    if host = nil then		      return theList		    end if		    		    soft declare function CFPreferencesCopyKeyList lib CarbonFramework (applicationID as Ptr, userName as Ptr, hostName as Ptr) as Ptr		    		    dim keyArray as CFArray = CFPreferencesCopyKeyList(appID, user, host)		    for i as Integer = 0 to keyArray.Count - 1		      dim theValue as CFType = keyArray.Value(i)		      if theValue isA CFString then		        theValue.Retain		        theList.Append CFString(theValue)		      else		        //something's wrong		      end if		    next		    return theList		  #else		    dim noList() as String		    return noList		  #endif		End Function	#tag EndMethod	#tag Method, Flags = &h21		Private Shared Function CurrentUser() As Ptr		  dim carbon as CFBundle = CFBundle.CarbonFramework		  if carbon is nil then		    return nil		  end if		  		  const kCFPreferencesCurrentUser = "kCFPreferencesCurrentUser"		  dim p as Ptr = carbon.DataPointer(kCFPreferencesCurrentUser)		  if p = nil then		    return nil		  else		    return p.Ptr(0)		  end if		End Function	#tag EndMethod	#tag Method, Flags = &h21		Private Shared Function AnyHost() As Ptr		  dim carbon as CFBundle = CFBundle.CarbonFramework		  if carbon is nil then		    return nil		  end if		  		  const kCFPreferencesAnyHost = "kCFPreferencesAnyHost"		  dim p as Ptr = carbon.DataPointer(kCFPreferencesAnyHost)		  if p = nil then		    return nil		  else		    return p.Ptr(0)		  end if		End Function	#tag EndMethod	#tag ViewBehavior		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass