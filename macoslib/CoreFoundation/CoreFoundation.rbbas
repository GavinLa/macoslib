#tag ModuleModule CoreFoundation	#tag Method, Flags = &h0		Function Version() As Double		  #if targetMacOS		    dim frameworkBundle as CFBundle = CFBundle.NewCFBundle(CarbonBundleID)		    if frameworkBundle is nil then		      return 0.0		    end if		    		    const kCFCoreFoundationVersionNumber = "kCFCoreFoundationVersionNumber"		    		    dim p as Ptr = frameworkBundle.DataPointer(kCFCoreFoundationVersionNumber)		    if p <> nil then		      return p.Double(0)		    else		      return 0.0		    end if		  #endif		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function XMLValue(Extends theObj as CFPropertyList) As String		  #if TargetMacOS		    soft declare function CFPropertyListCreateXMLData lib CarbonFramework (allocator as Ptr, propertyList as Ptr) as Ptr		    		    dim xmlData as CFData = CFPropertyListCreateXMLData(nil, theObj)		    return DefineEncoding(xmlData.Data, Encodings.UTF8)		  #endif		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function CFRangeMake(loc as Int32, len as Int32) As CFRange		  dim r as CFRange		  r.location = loc		  r.length = len		  return r		End Function	#tag EndMethod	#tag Structure, Name = CFRange, Flags = &h0		location as Int32		length as Int32	#tag EndStructure	#tag ViewBehavior		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Module#tag EndModule