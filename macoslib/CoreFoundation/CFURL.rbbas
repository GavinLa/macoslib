#tag ClassClass CFURLInherits CFType	#tag Method, Flags = &h0		Sub Constructor(theURL as String)		  me.Constructor nil, theURL		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function StringValue() As String		  if me.Equals(nil) then		    return ""		  end if		  		  #if TargetMacOS		    soft declare function CFURLGetString lib CarbonFramework (anURL as Ptr) as CFStringRef		    		    dim stringRef as CFStringRef = CFURLGetString(me)		    stringRef.Retain		    return stringRef		  #endif		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function Scheme() As String		  if me.Equals(nil) then		    return ""		  end if		  		  #if TargetMacOS		    soft declare function CFURLCopyScheme lib CarbonFramework (anURL as Ptr) as CFStringRef		    		    return CFURLCopyScheme(me)		  #endif		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function NetLocation() As String		  if me.Equals(nil) then		    return ""		  end if		  		  #if TargetMacOS		    soft declare function CFURLCopyNetLocation lib CarbonFramework (anURL as Ptr) as CFStringRef		    		    return CFURLCopyNetLocation(me)		  #endif		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub Constructor(f as FolderItem)		  if f is nil then		    return		  end if		  		  me.Constructor f.URLPath		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Constructor(baseURL as CFURL, relativeURL as String)		  #if targetMacOS		    soft declare function CFURLCreateWithString lib CarbonFramework (allocator as Ptr, URLString as CFStringRef, baseURL as Ptr) as Ptr		    		    if baseURL is nil then		      me.Operator_Convert CFURLCreateWithString(nil, relativeURL, nil)		    else		      me.Operator_Convert CFURLCreateWithString(nil, relativeURL, baseURL)		    end if		  #endif		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function AbsoluteURL() As CFURL		  if me.Equals(nil) then		    return nil		  end if		  		  #if TargetMacOS		    soft declare function CFURLCopyAbsoluteURL lib CarbonFramework (relativeURL as Ptr) as Ptr		    		    dim absURL as CFURL = CFURLCopyAbsoluteURL(me)		    If absURL.Equals(nil) then		      return nil		    else		      return absURL		    end if		  #endif		  		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function BaseURL() As CFURL		  if me.Equals(nil) then		    return nil		  end if		  		  #if TargetMacOS		    soft declare function CFURLGetBaseURL lib CarbonFramework (anURL as Ptr) as Ptr		    		    dim theBaseURL as CFURL = CFURLGetBaseURL(me)		    if theBaseURL.Equals(nil) then		      return nil		    else		      theBaseURL.Retain		      return theBaseURL		    end if		  #endif		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function IsDecomposable() As Boolean		  if me.Equals(nil) then		    return false		  end if		  		  #if TargetMacOS		    soft declare function CFURLCanBeDecomposed lib CarbonFramework (anURL as Ptr) as Boolean		    		    Return CFURLCanBeDecomposed(me)		  #endif		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function Path() As String		  if me.Equals(nil) then		    return ""		  end if		  		  #if TargetMacOS		    dim buffer as new MemoryBlock(128)		    do		      soft declare function CFURLGetFileSystemRepresentation lib CarbonFramework (url as Ptr, resolveAgainstBase as Boolean, buffer as Ptr, maxBufLen as Integer) as Boolean		      		      if CFURLGetFileSystemRepresentation(me, true, buffer, buffer.Size) then		        exit		      else		        buffer.Size = 2*buffer.Size		      end if		    loop until buffer.Size >= 131072		    return DefineEncoding(buffer.CString(0), Encodings.SystemDefault)		  #endif		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function Item() As FolderItem		  if me.Equals(nil) then		    return nil		  end if		  		  return GetFolderItem(me.StringValue, FolderItem.PathTypeURL)		End Function	#tag EndMethod	#tag Method, Flags = &h0		 Shared Function ClassID() As UInt32		  #if targetMacOS		    static inited as boolean		    static id as Uint32		    		    soft declare function CFURLGetTypeID lib CarbonFramework () as UInt32		    		    if inited = false then		      id = CFURLGetTypeID		      inited = true		    end if		    		  #endif		  		  return id		End Function	#tag EndMethod	#tag ViewBehavior		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass